{"ast":null,"code":"var _jsxFileName = \"/home/kaldheim/django_ci_cd/frontend/src/components/Pipeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Исходные данные\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Build'\n  },\n  position: {\n    x: 250,\n    y: 0\n  },\n  status: 'Pending'\n}, {\n  id: '2',\n  data: {\n    label: 'Test'\n  },\n  position: {\n    x: 100,\n    y: 150\n  },\n  status: 'Pending'\n}, {\n  id: '3',\n  data: {\n    label: 'Deploy'\n  },\n  position: {\n    x: 400,\n    y: 150\n  },\n  status: 'Pending'\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  animated: true\n}, {\n  id: 'e1-3',\n  source: '1',\n  target: '3',\n  animated: true\n}];\nconst statusColors = {\n  Pending: '#f0ad4e',\n  Running: '#5bc0de',\n  Completed: '#5cb85c',\n  Failed: '#d9534f'\n};\nconst Pipeline = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [logs, setLogs] = useState([]);\n\n  // Обновление статуса задачи\n  const updateNodeStatus = (nodeId, status) => {\n    setNodes(nds => nds.map(node => node.id === nodeId ? {\n      ...node,\n      status,\n      style: {\n        background: statusColors[status],\n        color: '#fff'\n      }\n    } : node));\n    setLogs(prevLogs => [...prevLogs, `Task ${nodeId} status updated to ${status}`]);\n  };\n\n  // Имитация выполнения пайплайна\n  const runPipeline = () => {\n    updateNodeStatus('1', 'Running');\n    setTimeout(() => {\n      updateNodeStatus('1', 'Completed');\n      updateNodeStatus('2', 'Running');\n    }, 2000);\n    setTimeout(() => {\n      updateNodeStatus('2', 'Completed');\n      updateNodeStatus('3', 'Running');\n    }, 4000);\n    setTimeout(() => {\n      updateNodeStatus('3', 'Completed');\n    }, 6000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CI/CD Pipeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runPipeline,\n      style: {\n        padding: '10px 20px',\n        marginBottom: '20px',\n        cursor: 'pointer'\n      },\n      children: \"Run Pipeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '400px',\n        width: '800px',\n        border: '1px solid #ddd'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#aaa\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        width: '800px',\n        height: '150px',\n        overflowY: 'auto',\n        backgroundColor: '#f9f9f9',\n        border: '1px solid #ddd',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '5px 0'\n        },\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Pipeline, \"PCDWyerN2sQHRvjTehiws9TF+rs=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = Pipeline;\nexport default Pipeline;\nvar _c;\n$RefreshReg$(_c, \"Pipeline\");","map":{"version":3,"names":["React","useState","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","jsxDEV","_jsxDEV","initialNodes","id","type","data","label","position","x","y","status","initialEdges","source","target","animated","statusColors","Pending","Running","Completed","Failed","Pipeline","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","logs","setLogs","updateNodeStatus","nodeId","nds","map","node","style","background","color","prevLogs","runPipeline","setTimeout","display","flexDirection","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","marginBottom","cursor","height","width","border","fitView","gap","marginTop","overflowY","backgroundColor","log","index","margin","_c","$RefreshReg$"],"sources":["/home/kaldheim/django_ci_cd/frontend/src/components/Pipeline.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Исходные данные\nconst initialNodes = [\n  { id: '1', type: 'input', data: { label: 'Build' }, position: { x: 250, y: 0 }, status: 'Pending' },\n  { id: '2', data: { label: 'Test' }, position: { x: 100, y: 150 }, status: 'Pending' },\n  { id: '3', data: { label: 'Deploy' }, position: { x: 400, y: 150 }, status: 'Pending' },\n];\n\nconst initialEdges = [\n  { id: 'e1-2', source: '1', target: '2', animated: true },\n  { id: 'e1-3', source: '1', target: '3', animated: true },\n];\n\nconst statusColors = {\n  Pending: '#f0ad4e',\n  Running: '#5bc0de',\n  Completed: '#5cb85c',\n  Failed: '#d9534f',\n};\n\nconst Pipeline = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [logs, setLogs] = useState([]);\n\n  // Обновление статуса задачи\n  const updateNodeStatus = (nodeId, status) => {\n    setNodes((nds) =>\n      nds.map((node) => (node.id === nodeId ? { ...node, status, style: { background: statusColors[status], color: '#fff' } } : node))\n    );\n    setLogs((prevLogs) => [...prevLogs, `Task ${nodeId} status updated to ${status}`]);\n  };\n\n  // Имитация выполнения пайплайна\n  const runPipeline = () => {\n    updateNodeStatus('1', 'Running');\n    setTimeout(() => {\n      updateNodeStatus('1', 'Completed');\n      updateNodeStatus('2', 'Running');\n    }, 2000);\n\n    setTimeout(() => {\n      updateNodeStatus('2', 'Completed');\n      updateNodeStatus('3', 'Running');\n    }, 4000);\n\n    setTimeout(() => {\n      updateNodeStatus('3', 'Completed');\n    }, 6000);\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <h2>CI/CD Pipeline</h2>\n      <button onClick={runPipeline} style={{ padding: '10px 20px', marginBottom: '20px', cursor: 'pointer' }}>\n        Run Pipeline\n      </button>\n      <div style={{ height: '400px', width: '800px', border: '1px solid #ddd' }}>\n        <ReactFlow nodes={nodes} edges={edges} onNodesChange={onNodesChange} onEdgesChange={onEdgesChange} fitView>\n          <MiniMap />\n          <Controls />\n          <Background color=\"#aaa\" gap={16} />\n        </ReactFlow>\n      </div>\n      <div style={{ marginTop: '20px', width: '800px', height: '150px', overflowY: 'auto', backgroundColor: '#f9f9f9', border: '1px solid #ddd', padding: '10px' }}>\n        <h4>Logs</h4>\n        {logs.map((log, index) => (\n          <p key={index} style={{ margin: '5px 0' }}>\n            {log}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Pipeline;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,IAAIC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,aAAa,EAAEC,aAAa,QAAQ,WAAW;AAClG,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAQ,CAAC;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAE,CAAC;EAAEC,MAAM,EAAE;AAAU,CAAC,EACnG;EAAEP,EAAE,EAAE,GAAG;EAAEE,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAO,CAAC;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAAEC,MAAM,EAAE;AAAU,CAAC,EACrF;EAAEP,EAAE,EAAE,GAAG;EAAEE,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAS,CAAC;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAAEC,MAAM,EAAE;AAAU,CAAC,CACxF;AAED,MAAMC,YAAY,GAAG,CACnB;EAAER,EAAE,EAAE,MAAM;EAAES,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE,GAAG;EAAEC,QAAQ,EAAE;AAAK,CAAC,EACxD;EAAEX,EAAE,EAAE,MAAM;EAAES,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE,GAAG;EAAEC,QAAQ,EAAE;AAAK,CAAC,CACzD;AAED,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,SAAS,EAAE,SAAS;EACpBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG1B,aAAa,CAACI,YAAY,CAAC;EACpE,MAAM,CAACuB,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG5B,aAAa,CAACY,YAAY,CAAC;EACpE,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMqC,gBAAgB,GAAGA,CAACC,MAAM,EAAErB,MAAM,KAAK;IAC3Ca,QAAQ,CAAES,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAAC/B,EAAE,KAAK4B,MAAM,GAAG;MAAE,GAAGG,IAAI;MAAExB,MAAM;MAAEyB,KAAK,EAAE;QAAEC,UAAU,EAAErB,YAAY,CAACL,MAAM,CAAC;QAAE2B,KAAK,EAAE;MAAO;IAAE,CAAC,GAAGH,IAAK,CACjI,CAAC;IACDL,OAAO,CAAES,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,QAAQP,MAAM,sBAAsBrB,MAAM,EAAE,CAAC,CAAC;EACpF,CAAC;;EAED;EACA,MAAM6B,WAAW,GAAGA,CAAA,KAAM;IACxBT,gBAAgB,CAAC,GAAG,EAAE,SAAS,CAAC;IAChCU,UAAU,CAAC,MAAM;MACfV,gBAAgB,CAAC,GAAG,EAAE,WAAW,CAAC;MAClCA,gBAAgB,CAAC,GAAG,EAAE,SAAS,CAAC;IAClC,CAAC,EAAE,IAAI,CAAC;IAERU,UAAU,CAAC,MAAM;MACfV,gBAAgB,CAAC,GAAG,EAAE,WAAW,CAAC;MAClCA,gBAAgB,CAAC,GAAG,EAAE,SAAS,CAAC;IAClC,CAAC,EAAE,IAAI,CAAC;IAERU,UAAU,CAAC,MAAM;MACfV,gBAAgB,CAAC,GAAG,EAAE,WAAW,CAAC;IACpC,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACE7B,OAAA;IAAKkC,KAAK,EAAE;MAAEM,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC7E3C,OAAA;MAAA2C,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/C,OAAA;MAAQgD,OAAO,EAAEV,WAAY;MAACJ,KAAK,EAAE;QAAEe,OAAO,EAAE,WAAW;QAAEC,YAAY,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAU,CAAE;MAAAR,QAAA,EAAC;IAExG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT/C,OAAA;MAAKkC,KAAK,EAAE;QAAEkB,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAiB,CAAE;MAAAX,QAAA,eACxE3C,OAAA,CAACP,SAAS;QAAC4B,KAAK,EAAEA,KAAM;QAACG,KAAK,EAAEA,KAAM;QAACD,aAAa,EAAEA,aAAc;QAACG,aAAa,EAAEA,aAAc;QAAC6B,OAAO;QAAAZ,QAAA,gBACxG3C,OAAA,CAACN,OAAO;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACX/C,OAAA,CAACL,QAAQ;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACZ/C,OAAA,CAACJ,UAAU;UAACwC,KAAK,EAAC,MAAM;UAACoB,GAAG,EAAE;QAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACN/C,OAAA;MAAKkC,KAAK,EAAE;QAAEuB,SAAS,EAAE,MAAM;QAAEJ,KAAK,EAAE,OAAO;QAAED,MAAM,EAAE,OAAO;QAAEM,SAAS,EAAE,MAAM;QAAEC,eAAe,EAAE,SAAS;QAAEL,MAAM,EAAE,gBAAgB;QAAEL,OAAO,EAAE;MAAO,CAAE;MAAAN,QAAA,gBAC3J3C,OAAA;QAAA2C,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACZpB,IAAI,CAACK,GAAG,CAAC,CAAC4B,GAAG,EAAEC,KAAK,kBACnB7D,OAAA;QAAekC,KAAK,EAAE;UAAE4B,MAAM,EAAE;QAAQ,CAAE;QAAAnB,QAAA,EACvCiB;MAAG,GADEC,KAAK;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAtDID,QAAQ;EAAA,QAC6BtB,aAAa,EACbC,aAAa;AAAA;AAAAiE,EAAA,GAFlD5C,QAAQ;AAwDd,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}