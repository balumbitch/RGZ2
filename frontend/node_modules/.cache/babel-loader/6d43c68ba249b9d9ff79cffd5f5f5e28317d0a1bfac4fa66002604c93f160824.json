{"ast":null,"code":"var _jsxFileName = \"/home/kaldheim/django_ci_cd/frontend/src/components/Pipeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, addEdge, useNodesState, useEdgesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Исходные данные\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Build'\n  },\n  position: {\n    x: 250,\n    y: 0\n  },\n  status: 'Pending'\n}, {\n  id: '2',\n  data: {\n    label: 'Test'\n  },\n  position: {\n    x: 100,\n    y: 150\n  },\n  status: 'Pending'\n}, {\n  id: '3',\n  data: {\n    label: 'Deploy'\n  },\n  position: {\n    x: 400,\n    y: 150\n  },\n  status: 'Pending'\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  animated: true\n}, {\n  id: 'e1-3',\n  source: '1',\n  target: '3',\n  animated: true\n}];\nconst statusColors = {\n  Pending: '#f0ad4e',\n  Running: '#5bc0de',\n  Completed: '#5cb85c',\n  Failed: '#d9534f'\n};\nconst Pipeline = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [logs, setLogs] = useState([]);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [taskDetails, setTaskDetails] = useState(null);\n  const [filteredLogs, setFilteredLogs] = useState(logs);\n  const logTypes = ['info', 'warning', 'error'];\n\n  // Обновление статуса задачи\n  const updateNodeStatus = (nodeId, status) => {\n    const startTime = status === 'Running' ? new Date().toISOString() : undefined;\n    const endTime = status === 'Completed' || status === 'Failed' ? new Date().toISOString() : undefined;\n    setNodes(nds => nds.map(node => node.id === nodeId ? {\n      ...node,\n      status,\n      data: {\n        ...node.data,\n        startTime,\n        endTime\n      },\n      style: {\n        background: statusColors[status],\n        color: '#fff'\n      }\n    } : node));\n    setLogs(prevLogs => [...prevLogs, {\n      type: 'info',\n      message: `Task ${nodeId} status updated to ${status}`\n    }]);\n  };\n\n  // Запуск пайплайна\n  const runPipeline = () => {\n    updateNodeStatus('1', 'Running');\n    setTimeout(() => {\n      updateNodeStatus('1', 'Completed');\n      updateNodeStatus('2', 'Running');\n    }, 2000);\n    setTimeout(() => {\n      updateNodeStatus('2', 'Completed');\n      updateNodeStatus('3', 'Running');\n    }, 4000);\n    setTimeout(() => {\n      updateNodeStatus('3', 'Completed');\n    }, 6000);\n  };\n\n  // Функция остановки всех задач\n  const stopPipeline = () => {\n    setNodes(nds => nds.map(node => ({\n      ...node,\n      status: 'Failed',\n      style: {\n        background: statusColors['Failed'],\n        color: '#fff'\n      }\n    })));\n    setLogs(prevLogs => [...prevLogs, {\n      type: 'warning',\n      message: 'Pipeline stopped manually'\n    }]);\n  };\n  const restartPipeline = () => {\n    setNodes(nds => nds.map(node => ({\n      ...node,\n      status: 'Pending',\n      style: {\n        background: statusColors['Pending'],\n        color: '#fff'\n      }\n    })));\n    runPipeline();\n  };\n\n  // Добавление новой задачи\n  const addNode = label => {\n    if (!label) return;\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      data: {\n        label\n      },\n      position: {\n        x: Math.random() * 600,\n        y: Math.random() * 400\n      },\n      status: 'Pending',\n      style: {\n        background: statusColors['Pending'],\n        color: '#fff'\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n    setLogs(prevLogs => [...prevLogs, {\n      type: 'info',\n      message: `Added new task: ${label}`\n    }]);\n    setNewTaskName('');\n  };\n  const filterLogs = type => {\n    setFilteredLogs(logs.filter(log => log.type === type));\n  };\n  const onNodeClick = (event, node) => {\n    setTaskDetails(node);\n  };\n\n  // Обработчик соединения узлов\n  const onConnect = params => {\n    setEdges(eds => addEdge(params, eds));\n    setLogs(prevLogs => [...prevLogs, {\n      type: 'info',\n      message: `Connected ${params.source} -> ${params.target}`\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#2a2f23',\n      minHeight: '100vh',\n      padding: '20px',\n      color: '#c3e88d'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: '#9ccc65'\n      },\n      children: \"CI/CD Pipeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runPipeline,\n        style: {\n          margin: '5px',\n          padding: '10px',\n          backgroundColor: '#5cb85c',\n          color: '#fff'\n        },\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopPipeline,\n        style: {\n          margin: '5px',\n          padding: '10px',\n          backgroundColor: '#d9534f',\n          color: '#fff'\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartPipeline,\n        style: {\n          margin: '5px',\n          padding: '10px',\n          backgroundColor: '#5bc0de',\n          color: '#fff'\n        },\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Name\",\n        value: newTaskName,\n        onChange: e => setNewTaskName(e.target.value),\n        style: {\n          padding: '5px',\n          marginRight: '10px',\n          border: '1px solid #9ccc65',\n          backgroundColor: '#394a34',\n          color: '#c3e88d'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode(newTaskName),\n        style: {\n          padding: '5px 10px',\n          backgroundColor: '#9ccc65',\n          color: '#2a2f23',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '400px',\n        width: '800px',\n        border: '1px solid #9ccc65',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onNodeClick: onNodeClick,\n        onConnect: onConnect // Обработчик соединений\n        ,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#555\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), taskDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        margin: '20px auto',\n        border: '1px solid #9ccc65',\n        backgroundColor: '#394a34',\n        width: '800px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Task Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 14\n        }, this), \" \", taskDetails.data.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 14\n        }, this), \" \", taskDetails.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Start Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 14\n        }, this), \" \", taskDetails.data.startTime || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"End Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 14\n        }, this), \" \", taskDetails.data.endTime || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        margin: '20px auto',\n        border: '1px solid #9ccc65',\n        backgroundColor: '#394a34',\n        width: '800px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: logTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => filterLogs(type),\n          style: {\n            margin: '5px',\n            padding: '5px',\n            backgroundColor: '#9ccc65',\n            color: '#2a2f23'\n          },\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: '150px',\n          overflowY: 'auto'\n        },\n        children: filteredLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0'\n          },\n          children: [\"[\", log.type.toUpperCase(), \"] \", log.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Pipeline, \"O59CKUaUi7QHOo+E+jsWLERC9/M=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = Pipeline;\nexport default Pipeline;\nvar _c;\n$RefreshReg$(_c, \"Pipeline\");","map":{"version":3,"names":["React","useState","ReactFlow","MiniMap","Controls","Background","addEdge","useNodesState","useEdgesState","jsxDEV","_jsxDEV","initialNodes","id","type","data","label","position","x","y","status","initialEdges","source","target","animated","statusColors","Pending","Running","Completed","Failed","Pipeline","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","logs","setLogs","newTaskName","setNewTaskName","taskDetails","setTaskDetails","filteredLogs","setFilteredLogs","logTypes","updateNodeStatus","nodeId","startTime","Date","toISOString","undefined","endTime","nds","map","node","style","background","color","prevLogs","message","runPipeline","setTimeout","stopPipeline","restartPipeline","addNode","newNodeId","length","toString","newNode","Math","random","filterLogs","filter","log","onNodeClick","event","onConnect","params","eds","backgroundColor","minHeight","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","margin","placeholder","value","onChange","e","marginRight","border","borderRadius","cursor","height","width","fitView","gap","maxHeight","overflowY","index","toUpperCase","_c","$RefreshReg$"],"sources":["/home/kaldheim/django_ci_cd/frontend/src/components/Pipeline.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Исходные данные\nconst initialNodes = [\n  { id: '1', type: 'input', data: { label: 'Build' }, position: { x: 250, y: 0 }, status: 'Pending' },\n  { id: '2', data: { label: 'Test' }, position: { x: 100, y: 150 }, status: 'Pending' },\n  { id: '3', data: { label: 'Deploy' }, position: { x: 400, y: 150 }, status: 'Pending' },\n];\n\nconst initialEdges = [\n  { id: 'e1-2', source: '1', target: '2', animated: true },\n  { id: 'e1-3', source: '1', target: '3', animated: true },\n];\n\nconst statusColors = {\n  Pending: '#f0ad4e',\n  Running: '#5bc0de',\n  Completed: '#5cb85c',\n  Failed: '#d9534f',\n};\n\nconst Pipeline = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [logs, setLogs] = useState([]);\n  const [newTaskName, setNewTaskName] = useState('');\n  const [taskDetails, setTaskDetails] = useState(null);\n  const [filteredLogs, setFilteredLogs] = useState(logs);\n\n  const logTypes = ['info', 'warning', 'error'];\n\n  // Обновление статуса задачи\n  const updateNodeStatus = (nodeId, status) => {\n    const startTime = status === 'Running' ? new Date().toISOString() : undefined;\n    const endTime = status === 'Completed' || status === 'Failed' ? new Date().toISOString() : undefined;\n\n    setNodes((nds) =>\n      nds.map((node) =>\n        node.id === nodeId\n          ? { ...node, status, data: { ...node.data, startTime, endTime }, style: { background: statusColors[status], color: '#fff' } }\n          : node\n      )\n    );\n\n    setLogs((prevLogs) => [\n      ...prevLogs,\n      { type: 'info', message: `Task ${nodeId} status updated to ${status}` },\n    ]);\n  };\n\n  // Запуск пайплайна\n  const runPipeline = () => {\n    updateNodeStatus('1', 'Running');\n    setTimeout(() => {\n      updateNodeStatus('1', 'Completed');\n      updateNodeStatus('2', 'Running');\n    }, 2000);\n\n    setTimeout(() => {\n      updateNodeStatus('2', 'Completed');\n      updateNodeStatus('3', 'Running');\n    }, 4000);\n\n    setTimeout(() => {\n      updateNodeStatus('3', 'Completed');\n    }, 6000);\n  };\n\n  // Функция остановки всех задач\n  const stopPipeline = () => {\n    setNodes((nds) =>\n      nds.map((node) => ({ ...node, status: 'Failed', style: { background: statusColors['Failed'], color: '#fff' } }))\n    );\n    setLogs((prevLogs) => [...prevLogs, { type: 'warning', message: 'Pipeline stopped manually' }]);\n  };\n\n  const restartPipeline = () => {\n    setNodes((nds) =>\n      nds.map((node) => ({ ...node, status: 'Pending', style: { background: statusColors['Pending'], color: '#fff' } }))\n    );\n    runPipeline();\n  };\n\n  // Добавление новой задачи\n  const addNode = (label) => {\n    if (!label) return;\n    const newNodeId = (nodes.length + 1).toString();\n    const newNode = {\n      id: newNodeId,\n      data: { label },\n      position: { x: Math.random() * 600, y: Math.random() * 400 },\n      status: 'Pending',\n      style: { background: statusColors['Pending'], color: '#fff' },\n    };\n\n    setNodes((nds) => [...nds, newNode]);\n    setLogs((prevLogs) => [...prevLogs, { type: 'info', message: `Added new task: ${label}` }]);\n    setNewTaskName('');\n  };\n\n  const filterLogs = (type) => {\n    setFilteredLogs(logs.filter((log) => log.type === type));\n  };\n\n  const onNodeClick = (event, node) => {\n    setTaskDetails(node);\n  };\n\n  // Обработчик соединения узлов\n  const onConnect = (params) => {\n    setEdges((eds) => addEdge(params, eds));\n    setLogs((prevLogs) => [\n      ...prevLogs,\n      { type: 'info', message: `Connected ${params.source} -> ${params.target}` },\n    ]);\n  };\n\n  return (\n    <div style={{ backgroundColor: '#2a2f23', minHeight: '100vh', padding: '20px', color: '#c3e88d' }}>\n      <h2 style={{ textAlign: 'center', color: '#9ccc65' }}>CI/CD Pipeline</h2>\n\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n        <button onClick={runPipeline} style={{ margin: '5px', padding: '10px', backgroundColor: '#5cb85c', color: '#fff' }}>Run</button>\n        <button onClick={stopPipeline} style={{ margin: '5px', padding: '10px', backgroundColor: '#d9534f', color: '#fff' }}>Stop</button>\n        <button onClick={restartPipeline} style={{ margin: '5px', padding: '10px', backgroundColor: '#5bc0de', color: '#fff' }}>Restart</button>\n      </div>\n\n      {/* Добавление новой задачи */}\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n        <input\n          type=\"text\"\n          placeholder=\"Task Name\"\n          value={newTaskName}\n          onChange={(e) => setNewTaskName(e.target.value)}\n          style={{\n            padding: '5px',\n            marginRight: '10px',\n            border: '1px solid #9ccc65',\n            backgroundColor: '#394a34',\n            color: '#c3e88d',\n          }}\n        />\n        <button\n          onClick={() => addNode(newTaskName)}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#9ccc65',\n            color: '#2a2f23',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          Add Task\n        </button>\n      </div>\n\n      <div style={{ height: '400px', width: '800px', border: '1px solid #9ccc65', margin: 'auto' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onNodeClick={onNodeClick}\n          onConnect={onConnect}  // Обработчик соединений\n          fitView\n        >\n          <MiniMap />\n          <Controls />\n          <Background color=\"#555\" gap={16} />\n        </ReactFlow>\n      </div>\n\n      {/* Детали задачи */}\n      {taskDetails && (\n        <div style={{ padding: '20px', margin: '20px auto', border: '1px solid #9ccc65', backgroundColor: '#394a34', width: '800px' }}>\n          <h4>Task Details</h4>\n          <p><strong>Name:</strong> {taskDetails.data.label}</p>\n          <p><strong>Status:</strong> {taskDetails.status}</p>\n          <p><strong>Start Time:</strong> {taskDetails.data.startTime || 'N/A'}</p>\n          <p><strong>End Time:</strong> {taskDetails.data.endTime || 'N/A'}</p>\n        </div>\n      )}\n\n      {/* Логи с фильтрацией */}\n      <div style={{ padding: '20px', margin: '20px auto', border: '1px solid #9ccc65', backgroundColor: '#394a34', width: '800px' }}>\n        <h4>Logs</h4>\n        <div>\n          {logTypes.map((type) => (\n            <button key={type} onClick={() => filterLogs(type)} style={{ margin: '5px', padding: '5px', backgroundColor: '#9ccc65', color: '#2a2f23' }}>\n              {type}\n            </button>\n          ))}\n        </div>\n        <div style={{ maxHeight: '150px', overflowY: 'auto' }}>\n          {filteredLogs.map((log, index) => (\n            <p key={index} style={{ margin: '5px 0' }}>\n              [{log.type.toUpperCase()}] {log.message}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Pipeline;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}